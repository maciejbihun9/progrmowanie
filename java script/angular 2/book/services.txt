 * services are a great way to fetch the data!!!
 - actually this is a main use case in angular 2 
 
 * there is nothing bad in service-in-service scenario!!!
 
 * if we want to bind a service in to a template then it have to pe public,
 
 * we can call services methods in the html code,

 * create a service component:
 - ng generate service hero
 
 * simple service example:
 - @Injectable()
export class Mock {
  mike = new Person(1, 'Mike', 'mike@gmail');

  constructor() { }

}

 * *Injectable() - zapewnia, że pozostałe moduły także zostaną wstrzyknięte dalej
 
 * Each service should be declared in app.module providers
 - in the providers list we have all singleton objects that are 
   shared by all modules and objects.
 - we do not have to declare them in other places  

 * serwis najlepiej inicjalizować w konstruktorze komponentów:
 - constructor(private _mock: Mock) {
  }

 * pobieranie danych nie powinno być w konstruktorze, bo zajmuje dużo czasu,
 - pobieranie w ngOnInit()
 
 * pobieranie danych z serwera powinno się odbywać poprzez Observable, 
 ponieważ może on się zatrzymać na kilka sekund podczas, gdy będzie
 czekał na odpowiedź. UI się nie zawiesi dzięki temu:
 - getHeroes(): Observable<Hero[]> {
    return of(HEROES);
  }
  
 * pobieranie danych setowanie danych z serwera, gdy są dostepne do kolekcji
 z komponentu.
 - nie zawiesza UI.
 - getHeroes(): void {
    this.heroService.getHeroes()
      .subscribe(heroes => this.heroes = heroes);
  } 
  