BASIC:

 * set input parameters in vertical order:
 - <ngx-datatable
           class="material"
           [columnMode]="'force'"
           [headerHeight]="50"
           [footerHeight]="50"
           [rowHeight]="50"
           [scrollbarV]="true"
           [scrollbarH]="true"
           [rows]="rows">

 * use if else statement for input variables:
 - innerWidth is the name for the host component,
 - @Input() set innerWidth(val: number) {
       this._innerWidth = val;

       if (this._columns) {
         const colByPin = columnsByPin(this._columns);
         this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);
         this.setStylesByGroup();
       }
     }
 - use get() to get this value:
 - get innerWidth(): number {
       return this._innerWidth;
   }

DIRECTIVES AS COMPONENTS:

 * It is a good practice to create a component as a directive, because
 is this case we can use our components as directives and pick different
 packages depends on use case:
 - <tr  *ngFor="let row of rows | paginate: { itemsPerPage: 20, currentPage: p }; let i = index" super-table-row [row]="row"></tr>
 - @Component({
     /* tslint:disable-next-line */
     selector: '[super-table-row]',
     template: `<td [style.height]="height" *ngFor="let column of state.columns" super-table-cell [row]="row" [column]="column"></td>`

   })
   export class SuperTableRowComponent {

     @Input() row: any;
     height = '48dp';

     constructor(public state: SuperTableState) { }

   }

