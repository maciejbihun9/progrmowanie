
 * pobieranie elementu z podana klasą z elementu o podanym id:
 - $("#id .class_name")

 * ustawianie atrybutów elementom:
 - $("#Sub-Regions .w-button").first().attr("href", "/Global");

 * $("a.like") - wyszukujemy w dokumencie HTML wszystkie elementy <a> wraz z klas� like,

 * $.post oraz $.get - kr�luj� podczas definiowania metod AJAX JSON

 * e.preventDefault() - zapobieganie standardowemu dzia�aniu elementa html

 * wysy�anie polecenia ajax:
	$.ajax({
            type: 'POST',
            url: '{% url "content_order" %}',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify(contents_order),
        });

 * pobranie indeksu elementu listy iterowanej(ju� po wywo�aniu iteracji!):
 - $(this).index();

 * iterowanie po liscie, kt�a posiada takie id:
	$('#module-contents').children().each(function(){
            // Powi�zanie identyfikatora modu�u z jego kolejno�ci�.
	    // pobranie data-id z ka�dego elementu i zapisanie indeksu pod takim luczem w s�owniku
            contents_order[$(this).data('id')] = $(this).index();
        });

 * pobranie tekstu: 
 - <div data-id="{{ content.id }}">
 - modules_order[$(this).data('id')] = $(this).index();

 * przypisanie jakie� warto�ci do wszystkich element�w z podan� klas�:
 - tu jest this, bo jest to iterowane w li�cie!!
    $('#modules').children().each(function(){
        // Uaktualnienie kolumny order.
        $(this).find('.order').text($(this).index() + 1);
        // Powi�zanie identyfikatora modu�u z jego kolejno�ci�.
        modules_order[$(this).data('id')] = $(this).index();
    });
 - przypisanie tekstu do ka�dego elementu dziecka danego elementu listy
 - znalezienie w tym dziecku elementu z klas� order i wykoanie na nim akcji
 - $(this).find('.order').text($(this).index() + 1);

 * funkcjonalno�� przestawiania elemnet�w listy, kt�a ma id: modules:
$('#modules').sortable({
    // Zdarzenie b�dzie wywo�ywane za ka�dym razem, gdy u�ytkownik zako�czy sortowanie elementu.
    // czyli gdy opu�ci element
    stop: function(event, ui) {
        // Tworzymy pusty s�ownik modules_order. Kluczami dla tego s�ownika b�d�
        //identyfikatory modu��w, natomiast warto�ciami � kolejno�� przypisana
        //poszczeg�lnym modu�om.
        modules_order = {};
        $('#modules').children().each(function(){
            // Uaktualnienie kolumny order.
            $(this).find('.order').text($(this).index() + 1);
            // Powi�zanie identyfikatora modu�u z jego kolejno�ci�.
            modules_order[$(this).data('id')] = $(this).index();
        });
    
        $.ajax({
            type: 'POST',
            url: '{% url "module_order" %}',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json', data: JSON.stringify(modules_order)
        });
    }
});