# opisanie funkcji zycia apliakcji, ale po polsku, aby dobrze to zrozumieÄ‡

--------------- fazes linked to the component ----------------

 * firstly constructor is created, after that all other methods
 are called,
 - it is not possible to use input variables in the constructor,
 because they are not available there yet,

 * ngOnChanges() - is called before ngOnInit(),
 - this method contains SimpleChanges object with previouds and current data,
 - calls each time when an input variable is changed,
 - this is the first place where you can get those input parameters,
 - is called before ngOnInit and after each input item fileld change,
 - is called for each declared component in the parent component
 - if we have a parent view where we have many children that takes an input params
 from the parent component then on change in parent will invokde onCHanges in each
 of those child components

 zastosowanie:
 ngOnChanges(changes: SimpleChanges): void {
     console.log("On Changes called!");
     for (let item in changes){
       let change = changes[item];
       let currentValue = change.currentValue;
       console.log(currentValue)
     }
   }

 * ngOnInit() - called only once
 - To perform complex initializations shortly after construction.
 - To set up the component after Angular sets the input properties.
 - greate place for initial data,
 - in this moment all input data-bounded properties are initialized

 zastosowanie:
 - loading the data from service

 * ngDoCheck() - called after each previous calls!
 - I do not think that I should use that ...
 - is called after each change detection, not only input variables...
 just each component change
 - we shouldn't implement this and ngOnChanges in the same component
 - called many many times!!!

 * ngOnDestry() - avoid memory leaks:
 - unsubscribe all handlers,

------------- fazes linked to the children -----------------
 * ngAfterContentInit() - called once for each component
 after the content has been initialized

 * ngAfterContentChecked() - is called as many times as ngDoCheck()
 - after each content change
 - after each component change

 * ngAfterViewInit() - called only once,
 after previous hook and after all parent and child views has been initilized

 * ngAfterViewChecked() - called after each view change,
 - this is that third hook that is called after each component change,
 - called after each view change

