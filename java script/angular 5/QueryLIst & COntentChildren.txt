ViewChildren decorator:

 * @ViewChildren - decorator will return the component instance,
 
 * @ViewChildren(EmployeeComponent) employers: QueryList<EmployeeComponent>;

 examples:
 * we can also get an item with specified id:
 - <div #div>
	this is a div element
   </div>
 - @ViewChildren("div") div: QueryList<any>;
 
ViewChild: 

 * creates a connection between view and component(directive),
 
 * View queries are set before the ngAfterViewInit callback is called
 
 * we can call this component methods from this,
 
 examples:
 * @ViewChild(EmployeeComponent) firstEmp: EmployeeComponent;
 
 * @ViewChild('tpl') tpl;
 - this is an example of connection between native element with an id and a view,
 - this is an ElementRef instance that constains all java script Element fields and methods,
 
ViewContainerRef: 

 * once injected into a component refers to a template of this component,
 - this can add new templates to this view, where was declared,

 * creates new components dynamically,
 
 * zastosowanie:
 - constructor(private _vcr: ViewContainerRef) {}
 - get number of embedded items: \
 this._vcr.length;
 
