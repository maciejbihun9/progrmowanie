OBJECTS:

 * object in js can be considered as a map in some cases,

ARRAYS:

 * declare string array:
 const INSTRUMENTS: string[] = [
   'sax',
   'trumpet',
   'trombone',
   'piano',
   'keys',
   'drums'
 ];

 * define a function in collection object:
 - columns = [
       { prop: 'name', summaryFunc: () => null },
       { name: 'Gender', summaryFunc: (cells) => this.summaryForGender(cells) },
       { name: 'Company', summaryFunc: () => null }
     ];

 * add an item to an array:
 - array.push(item)

 * we can add functions to arrays and then call them after getting them from an array,
 - array = []
 - array.push(function(){
    console.log("function")
 })
 array[0]()

 * use forEach function to iterate over an array:
 - VERY IMPORTANT !!! - return in forEach does not return from a function, this is an iterator, use simple for loop instead,
 - this is used quite extensively,
 - array = [];
 - array.forEach(x => console.log("Each item form an array: " + x))

 * filter elements, it is much needed when we remove elements from a list in our UI,
 because we do not want to wait for our server to response, leave only elements that are not hero
 - this.heroes = this.heroes.filter(h => h !== hero);

 * call a specific code block foe each item in an array:
 this code will be invoked for each item from this specific array creating another array from it,
 - this.slice_nums.map(item => console.log('item from an array: ' + item));
 - let doubleArray = array.map((item) => {return item * item})

 * use functional methods to sum all of items:
 - let array = [12,13,2,4,23,6];
       var number = array.reduce((sum, value) => {
         return sum + value;
       }, 0); - result = 60

 * get max value from an array:
 - let maxNumber = array.reduce((a, b) => {
         return Math.max(a, b);
       });
 - this will return a max item

 * create a sublist from a list:
 - list.slice(index1, index2)

 * declare generic array:
 - var array = new Array<Object>();

 * check if item exists in an array:
 - array.includes(item) -> returns true if this item exists

 * combine items from an array into one string:
 - array.join(",") => "1,2,3,4",

 * find an index in an array that fullfills predicate:
 Returns index of an item that matches specified predicate.
 - array.findIndex((item) => {return item > 13});

 * add array to an array as a flat array:
 - let array = [1,2,3];
 - let variables = [2,5,7]
 - array.push(...variables) -> [1,2,3,2,5,7]


MAP:

 * create a map:
 - let map = new Map([
    ["A", 1],
    ["B", 2],
    ["C", 3]
 ]);

 - add to a map:
 map.set(key, value);

 - get an item from a map:
 map.get(key);

 - create an iterator from a values of a map:
 let values: Iterator<number> = map.values();

 - extract values from a map in a glance way:
 for (let [key, value] of map){
    console.log(key, value);
 }

SET:

 * works pretty much the same like in other languages,

 * create a set:
 - let set = new Set(),




